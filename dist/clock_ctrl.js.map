{"version":3,"sources":["../src/clock_ctrl.js"],"names":["PanelCtrl","MetricsPanelCtrl","moment","_","rendering","panelDefaults","clockType","fontSize","fontWeight","bgColor","ClockCtrl","$scope","$injector","defaults","panel","updateClock","events","on","onRender","bind","_onDataReceived","data","parseData","series","console","log","render","map","d","i","title","items","row","r","j","x","y","scope","elem","attrs","ctrl","addEditorTab","time","format","$timeout","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;AAAWC,sB,kBAAAA,gB;;AACZC,Y;;AACAC,O;;AACAC,e;;;;;;;;;;;;;;;;;;;;;AAEDC,mB,GAAgB;AACpBC,mBAAW,SADS;AAEpBC,kBAAU,MAFU;AAGpBC,oBAAY,QAHQ;AAIpBC,iBAAS;AAJW,O;;2BAOTC,S;;;AACX,2BAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,4HACvBD,MADuB,EACfC,SADe;;AAE7BT,YAAEU,QAAF,CAAW,MAAKC,KAAhB,EAAuBT,aAAvB;AACA,gBAAKU,WAAL;;AAEA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKC,QAAL,CAAcC,IAAd,OAAzB;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,eAAL,CAAqBD,IAArB,OAAhC;AAN6B;AAO9B;;;;qCAEU;AACP,iBAAKE,IAAL,GAAY,KAAKC,SAAL,CAAe,KAAKC,MAApB,CAAZ;AACH;;;0CAEeF,I,EAAM;AAClBG,oBAAQC,GAAR,CAAYJ,IAAZ;AACA,iBAAKE,MAAL,GAAcF,IAAd;AACA,iBAAKA,IAAL,GAAY,KAAKC,SAAL,CAAeD,IAAf,CAAZ;AACA,iBAAKK,MAAL,CAAY,KAAKL,IAAjB;AACH;;;oCAESA,I,EAAM;AACd,mBAAOlB,EAAEwB,GAAF,CAAMN,IAAN,EAAY,UAACO,CAAD,EAAIC,CAAJ,EAAU;AAC3B,qBAAO;AACLC,iCAAeD,CADV;AAELE,uBAAO5B,EAAEwB,GAAF,CAAMC,EAAEI,GAAR,EAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC5B,yBAAO;AACLC,uBAAGjC,OAAO+B,EAAE,CAAF,CAAP,CADE;AAELG,uBAAGH,EAAE,CAAF;AAFE,mBAAP;AAID,iBALM;AAFF,eAAP;AASD,aAVM,CAAP;AAWD;;;+BAGII,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7BhB,oBAAQC,GAAR,CAAYY,KAAZ,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,IAAhC;AACApC,sBAAUiC,KAAV,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B;AACD;;;2CAEgB;AACf,iBAAKC,YAAL,CAAkB,SAAlB,EAA6B,8CAA7B,EAA6E,CAA7E;AACD;;;wCAEa;AAAA;;AACZ,iBAAKC,IAAL,GAAYxC,SAASyC,MAAT,CAAgB,UAAhB,CAAZ;AACA,iBAAKC,QAAL,CAAc,YAAM;AAAE,qBAAK7B,WAAL;AAAqB,aAA3C,EAA6C,IAA7C;AACD;;;;QAhD4Bd,gB;;;;AAmD/BS,gBAAUmC,WAAV,GAAwB,aAAxB","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl, MetricsPanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport rendering from './rendering';\n\nconst panelDefaults = {\n  clockType: '24 hour',\n  fontSize: '60px',\n  fontWeight: 'normal',\n  bgColor: null\n};\n\nexport class ClockCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    this.updateClock();\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this._onDataReceived.bind(this));\n  }\n\n  onRender() {\n      this.data = this.parseData(this.series);\n  }\n\n  _onDataReceived(data) {\n      console.log(data);\n      this.series = data;\n      this.data = this.parseData(data);\n      this.render(this.data);\n  }\n\n  parseData(data) {\n    return _.map(data, (d ,i) => {\n      return {\n        title: `data ${i}`,\n        items: _.map(d.row, (r, j) => {\n          return {\n            x: moment(r[0]),\n            y: r[1]\n          }\n        })\n      }\n    })\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    console.log(scope, elem, attrs, ctrl);\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/test-clock-plugin/editor.html', 2);\n  }\n\n  updateClock() {\n    this.time = moment().format('hh:mm:ss');\n    this.$timeout(() => { this.updateClock(); }, 1000);\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}