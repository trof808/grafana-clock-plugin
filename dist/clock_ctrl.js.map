{"version":3,"sources":["../src/clock_ctrl.js"],"names":["PanelCtrl","MetricsPanelCtrl","moment","_","rendering","panelDefaults","clockType","fontSize","fontWeight","bgColor","ClockCtrl","$scope","$injector","$rootScope","hiddenSeries","pieType","legend","show","values","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","breakPoint","aliasColors","format","valueName","strokeWidth","histData","combine","threshold","label","defaults","panel","updateClock","events","on","onRender","bind","_onDataReceived","data","parseData","series","console","log","render","map","d","i","title","items","row","r","j","x","y","scope","elem","attrs","ctrl","addEditorTab","time","$timeout","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,kBAAAA,S;AAAWC,sB,kBAAAA,gB;;AACZC,Y;;AACAC,O;;AACAC,e;;;;;;;;;;;;;;;;;;;;;AAEDC,mB,GAAgB;AACpBC,mBAAW,SADS;AAEpBC,kBAAU,MAFU;AAGpBC,oBAAY,QAHQ;AAIpBC,iBAAS;AAJW,O;;2BAOTC,S;;;AACX,2BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,UAA/B,EAA2C;AAAA;;AAAA,4HACnCF,MADmC,EAC3BC,SAD2B;;AAEvC,gBAAKC,UAAL,GAAkBA,UAAlB;AACA,gBAAKC,YAAL,GAAoB,EAApB;;AAEA,cAAIT,gBAAgB;AAClBU,qBAAS,MADS;AAElBC,oBAAQ;AACJC,oBAAM,IADF,EACQ;AACZC,sBAAQ;AAFJ,aAFU;AAMlBC,mBAAO,EANW;AAOlBC,wBAAY,IAPM;AAQlBC,2BAAe,CARG;AASlBC,sBAAU,IATQ;AAUlBC,qBAAS,CAAC,EAAD,CAVS;AAWlBC,0BAAc,IAXI;AAYlBC,2BAAe,WAZG;AAalBC,wBAAY,aAbM;AAclBC,wBAAY,KAdM;AAelBC,yBAAa,EAfK;AAgBlBC,oBAAQ,OAhBU;AAiBlBC,uBAAW,SAjBO;AAkBlBC,yBAAa,CAlBK;AAmBlBxB,sBAAU,KAnBQ;AAoBlByB,sBAAU,EApBQ;AAqBlBC,qBAAS;AACLC,yBAAW,GADN;AAELC,qBAAO;AAFF;AArBS,WAApB;AA0BFhC,YAAEiC,QAAF,CAAW,MAAKC,KAAhB,EAAuBhC,aAAvB;AACAF,YAAEiC,QAAF,CAAW,MAAKC,KAAL,CAAWrB,MAAtB,EAA8BX,cAAcW,MAA5C;AACA,gBAAKsB,WAAL;;AAEA,gBAAKC,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,MAAKC,QAAL,CAAcC,IAAd,OAAzB;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKG,eAAL,CAAqBD,IAArB,OAAhC;AApCyC;AAqC1C;;;;qCAEU;AACP,iBAAKE,IAAL,GAAY,KAAKC,SAAL,CAAe,KAAKC,MAApB,CAAZ;AACA,iBAAKT,KAAL,CAAWL,QAAX,GAAsBY,IAAtB;AACH;;;0CAEeA,I,EAAM;AAClBG,oBAAQC,GAAR,CAAYJ,IAAZ;AACA,iBAAKE,MAAL,GAAcF,IAAd;AACA,iBAAKA,IAAL,GAAY,KAAKC,SAAL,CAAeD,IAAf,CAAZ;AACA,iBAAKP,KAAL,CAAWL,QAAX,GAAsBY,IAAtB;AACA,iBAAKK,MAAL,CAAY,KAAKL,IAAjB;AACH;;;oCAESA,I,EAAM;AACd,mBAAOzC,EAAE+C,GAAF,CAAMN,IAAN,EAAY,UAACO,CAAD,EAAIC,CAAJ,EAAU;AAC3B,qBAAO;AACLC,iCAAeD,CADV;AAELE,uBAAOnD,EAAE+C,GAAF,CAAMC,EAAEI,GAAR,EAAa,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC5B,yBAAO;AACLC,uBAAGxD,OAAOsD,EAAE,CAAF,CAAP,CADE;AAELG,uBAAGH,EAAE,CAAF;AAFE,mBAAP;AAID,iBALM;AAFF,eAAP;AASD,aAVM,CAAP;AAWD;;;+BAGII,K,EAAOC,I,EAAMC,K,EAAOC,I,EAAM;AAC7BhB,oBAAQC,GAAR,CAAYY,KAAZ,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,IAAhC;AACA3D,sBAAUwD,KAAV,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,IAA9B;AACD;;;2CAEgB;AACf,iBAAKC,YAAL,CAAkB,SAAlB,EAA6B,8CAA7B,EAA6E,CAA7E;AACD;;;wCAEa;AAAA;;AACZ,iBAAKC,IAAL,GAAY/D,SAAS2B,MAAT,CAAgB,UAAhB,CAAZ;AACA,iBAAKqC,QAAL,CAAc,YAAM;AAAE,qBAAK5B,WAAL;AAAqB,aAA3C,EAA6C,IAA7C;AACD;;;;QAhF4BrC,gB;;;;AAmF/BS,gBAAUyD,WAAV,GAAwB,aAAxB","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl, MetricsPanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport rendering from './rendering';\n\nconst panelDefaults = {\n  clockType: '24 hour',\n  fontSize: '60px',\n  fontWeight: 'normal',\n  bgColor: null\n};\n\nexport class ClockCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n      this.$rootScope = $rootScope;\n      this.hiddenSeries = {};\n\n      var panelDefaults = {\n        pieType: 'hist',\n        legend: {\n            show: true, // disable/enable legend\n            values: true\n        },\n        links: [],\n        datasource: null,\n        maxDataPoints: 3,\n        interval: null,\n        targets: [{}],\n        cacheTimeout: null,\n        nullPointMode: 'connected',\n        legendType: 'Under graph',\n        breakPoint: '50%',\n        aliasColors: {},\n        format: 'short',\n        valueName: 'current',\n        strokeWidth: 1,\n        fontSize: '80%',\n        histData: {},\n        combine: {\n            threshold: 0.0,\n            label: 'Others'\n        }\n    };\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n    this.updateClock();\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this._onDataReceived.bind(this));\n  }\n\n  onRender() {\n      this.data = this.parseData(this.series);\n      this.panel.histData = data;\n  }\n\n  _onDataReceived(data) {\n      console.log(data);\n      this.series = data;\n      this.data = this.parseData(data);\n      this.panel.histData = data;\n      this.render(this.data);\n  }\n\n  parseData(data) {\n    return _.map(data, (d ,i) => {\n      return {\n        title: `data ${i}`,\n        items: _.map(d.row, (r, j) => {\n          return {\n            x: moment(r[0]),\n            y: r[1]\n          }\n        })\n      }\n    })\n  }\n\n\n  link(scope, elem, attrs, ctrl) {\n    console.log(scope, elem, attrs, ctrl);\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/test-clock-plugin/editor.html', 2);\n  }\n\n  updateClock() {\n    this.time = moment().format('hh:mm:ss');\n    this.$timeout(() => { this.updateClock(); }, 1000);\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}